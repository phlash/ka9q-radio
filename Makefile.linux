# $Id: Makefile.linux,v 1.91 2022/04/19 22:59:06 karn Exp $
BUILD=build
# Are we in the build directory?
ifeq ($(BUILD),$(notdir $(CURDIR)))
# yep - carry on..
VPATH=$(SRCDIR)

COPTS=-DNDEBUG=1 -O3 -march=native -std=gnu11 -pthread -Wall -funsafe-math-optimizations -D_GNU_SOURCE=1
# Get local versions (e.g., of librtlsdr)
LDOPTS=-L/usr/local/lib
#COPTS=-g -march=native -std=gnu11 -pthread -Wall -funsafe-math-optimizations -D_GNU_SOURCE=1
#LDOPTS=-g
CFLAGS=$(COPTS) $(INCLUDES)
BINDIR=/usr/local/bin
LIBDIR=/usr/local/share/ka9q-radio
DAEMONDIR=/usr/local/sbin
VARDIR=/var/lib/ka9q-radio
LDLIBS=-lpthread -lbsd -lm

DAEMONS=aprs aprsfeed radio soapysdr stereo rds
#DAEMONS=aprs aprsfeed funcube opus packet radio airspy airspyhf stereo rds rtlsdr

EXECS=iqplay iqrecord modulate monitor opussend pcmsend pcmcat pcmrecord pcmspawn control metadump pl show-pkt show-sig tune wspr-decode setfilt

AFILES=bandplan.txt help.txt modes.conf id.txt

SYSTEMD_FILES=airspy@.service airspyhf@.service funcube@.service hackrf@.service packet.service radio@.service aprsfeed.service opus@.service recordings@.service stereo.service rds.service wspr-decode.service horusdemod.service

UDEV_FILES=20-rtlsdr.rules 52-airspy.rules 52-airspyhf.rules 66-hackrf.rules 68-funcube-dongle-proplus.rules 68-funcube-dongle.rules 69-funcube-ka9q.rules

CONF_FILES=funcube-0.conf \
			 opus@hf.conf opus@hfdl.conf opus@6m.conf opus@2m.conf opus@125cm.conf opus@70cm.conf opus@aviation.conf opus@packet.conf \
			 stereo.conf rds.conf \
			 radio@10m.conf radio@6m.conf radio@fm.conf radio@2m.conf radio@125cm.conf radio@70cm.conf radio@hf.conf radio@aviation.conf radio@horus.conf radio@nws.conf radio@sonde.conf \
			 recordings@hf.conf recordings@6m.conf recordings@2m.conf recordings@125cm.conf recordings@70cm.conf recordings@aviation.conf \
			 wspr-decode.conf horus.conf airspy.conf packet.conf aprs.conf

AIRSPY_FILES=

BLACKLIST=airspy-blacklist.conf

SRC=airspy.c airspyhf.c aprs.c aprsfeed.c attr.c audio.c avahi.c ax25.c bandplan.c config.c control.c decimate.c decode_status.c dump.c fcd.c filter.c fm.c \
	   tune.c funcube.c iir.c iqplay.c iqrecord.c linear.c main.c metadump.c misc.c modes.c modulate.c monitor.c radio.c setfilt.c \
	   show-sig.c radio_status.c multicast.c opus.c pcmcat.c pcmsend.c osc.c packet.c hid-libusb.c opussend.c show-pkt.c pcmrecord.c pl.c rds.c rtcp.c rtlsdr.c pcmspawn.c \
	   status.c stereo.c wfm.c wspr-decode.c attr.h ax25.h bandplan.h conf.h config.h decimate.h \
	   fcd.h fcdhidcmd.h filter.h hidapi.h iir.h misc.h modes.h multicast.h osc.h radio.h status.h

all: depend $(DAEMONS) $(EXECS) $(AFILES) $(SYSTEMD_FILES) $(UDEV_FILES) $(CONF_FILES) $(AIRSPY_FILES) $(BLACKLIST) 98-sockbuf.conf

daemons: depend $(DAEMONS)

# Don't overwrite existing config files in /etc/radio
install: $(DAEMONS) $(EXECS) $(AFILES) $(SYSTEMD_FILES) $(UDEV_FILES) $(CONF_FILES) $(AIRSPY_FILES) $(BLACKLIST) 98-sockbuf.conf start-ka9q-horus.sh
	/usr/sbin/adduser --quiet --system --group radio
	/usr/sbin/adduser --quiet --system --ingroup radio airspy
	/usr/sbin/adduser --quiet --system --ingroup radio funcube
	/usr/sbin/adduser --quiet --system --ingroup radio recordings
	/usr/sbin/adduser --quiet --system --ingroup radio aprsfeed
	install -o root -m 0755 -D --target-directory=/etc/sysctl.d 98-sockbuf.conf
	install -o root -m 0755 -D --target-directory=$(DAEMONDIR) $(DAEMONS) start-ka9q-horus.sh
	install -o root -m 0755 -D --target-directory=$(BINDIR) $(EXECS)
	install -o root -m 0644 -D --target-directory=$(LIBDIR) $(AFILES)
	install -o root -m 0644 -D --target-directory=/etc/systemd/system $(SYSTEMD_FILES)
	install -o root -m 0644 -D --target-directory=/etc/udev/rules.d $(UDEV_FILES)
	install -o root -m 0644 -D --target-directory=/etc/modprobe.d $(BLACKLIST)
	mkdir -p /etc/fftw /etc/radio $(VARDIR) /etc/radio/airspy.conf.d
	chgrp radio $(VARDIR) /etc/radio /etc/fftw
	chmod g+ws $(VARDIR) /etc/radio /etc/fftw
	cp -n -v --target-directory=/etc/radio $(CONF_FILES)
#	cp -n -v --target-directory=/etc/radio/airspy.conf.d $(AIRSPY_FILES)
	systemctl daemon-reload

depend: .depend

.depend: $(SRC)
	rm -f $@
	$(CC) $(CFLAGS) -MM $^ > $@

-include .depend

.PHONY: all install depend daemons

# Executables
airspy: airspy.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lairspy -lavahi-client -lavahi-common -lbsd -liniparser -lm -lpthread

airspyhf: airspyhf.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lairspyhf -lavahi-client -lavahi-common -lbsd -liniparser -lm -lpthread

aprs: aprs.o ax25.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lpthread -lm

aprsfeed: aprsfeed.o ax25.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lpthread -lm

control: control.o modes.o bandplan.o decode_status.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lfftw3f_threads -lfftw3f -lncursesw -liniparser -lbsd -lm -lpthread

rtlsdr: rtlsdr.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lrtlsdr -lavahi-client -lavahi-common -lbsd -lm -lpthread

tune: tune.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lm

setfilt: setfilt.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lm

show-pkt: show-pkt.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lncursesw -lbsd -lm

show-sig: show-sig.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lncursesw -lbsd -lm

funcube: funcube.o status.o libradio.a libfcd.a
	$(CC) $(LDOPTS) -o $@ $^ -lportaudio -lavahi-client -lavahi-common -lusb-1.0 -lbsd -lm -lpthread

hackrf: hackrf.o status.o decimate.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lhackrf -lbsd -lpthread -lm

iqplay: iqplay.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lavahi-client -lavahi-common -lbsd -lpthread -lm

iqrecord: iqrecord.o decode_status.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lpthread -lm

metadump: metadump.o dump.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lbsd -lpthread -lm

modulate: modulate.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lfftw3f_threads -lfftw3f -lm -lpthread

monitor: monitor.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lopus -lportaudio -lncursesw -lbsd -lm -lpthread

opus: opus.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lopus -lavahi-client -lavahi-common -lbsd -lm -lpthread

opussend: opussend.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lopus -lportaudio -lbsd -lm

packet: packet.o ax25.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lavahi-client -lavahi-common -lfftw3f_threads -lfftw3f -lbsd -lm -lpthread

pcmcat: pcmcat.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lm -lbsd -lpthread 

pcmspawn: pcmspawn.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lm -lbsd -lpthread 

pcmrecord: pcmrecord.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lm -lbsd -lpthread 

pcmsend: pcmsend.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lportaudio -lbsd -lpthread

pl: pl.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lfftw3f_threads -lfftw3f -lbsd -lm -lpthread

radio: main.o audio.o fm.o wfm.o linear.o radio.o rtcp.o radio_status.o modes.o decode_status.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lavahi-client -lavahi-common -lfftw3f_threads -lfftw3f -lbsd -liniparser -lpthread -lm

rds: rds.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lavahi-client -lavahi-common -lfftw3f_threads -lfftw3f -lbsd -lm -lpthread

soapysdr: soapysdr.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lSoapySDR -lavahi-client -lavahi-common -lbsd -lm -lpthread

stereo: stereo.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lavahi-client -lavahi-common -lfftw3f_threads -lfftw3f -lbsd -lm -lpthread

wspr-decode: wspr-decode.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lfftw3f_threads -lfftw3f -lbsd -lm -lpthread


# Binary libraries
libfcd.a: fcd.o hid-libusb.o
	ar rv $@ $?
	ranlib $@

# subroutines useful in more than one program
libradio.a: avahi.o attr.o filter.o iir.o status.o misc.o multicast.o osc.o config.o
	ar rv $@ $?
	ranlib $@

else
# not in build dir.. re-invoke ourselves in build directory
# @see: http://make.mad-scientist.net/papers/multi-architecture-builds/

# prevent any built-in rules from being used
.SUFFIXES:

# mark the build directory as phony (thus build-once every time)
.PHONY: $(BUILD)
# the magic rule - first ensure build directory exists, then re-run make in there with specified goal/target
$(BUILD):
	+mkdir -p $(BUILD)
	+$(MAKE) -C $@ -f $(CURDIR)/$(lastword $(MAKEFILE_LIST)) SRCDIR=$(CURDIR) $(MAKECMDGOALS)

# prevent make attempting to re-build this makefile..
$(lastword $(MAKEFILE_LIST)): ;

# make any goal/target (apart from ourselves) depend on build directory, hence...
% :: $(BUILD); :

.PHONY: clean
clean:
	rm -rf $(BUILD)

endif
